[{"C:\\Users\\alexs\\Documents\\GitHub\\goal-tracker\\react-goal-tracker\\src\\index.js":"1","C:\\Users\\alexs\\Documents\\GitHub\\goal-tracker\\react-goal-tracker\\src\\App.js":"2","C:\\Users\\alexs\\Documents\\GitHub\\goal-tracker\\react-goal-tracker\\src\\List.js":"3","C:\\Users\\alexs\\Documents\\GitHub\\goal-tracker\\react-goal-tracker\\src\\Alert.js":"4"},{"size":151,"mtime":1609055708950,"results":"5","hashOfConfig":"6"},{"size":2336,"mtime":1609062733746,"results":"7","hashOfConfig":"6"},{"size":618,"mtime":1609061220581,"results":"8","hashOfConfig":"6"},{"size":115,"mtime":1609053242947,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b7pz3g",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\alexs\\Documents\\GitHub\\goal-tracker\\react-goal-tracker\\src\\index.js",[],"C:\\Users\\alexs\\Documents\\GitHub\\goal-tracker\\react-goal-tracker\\src\\App.js",["19","20"],"import './App.css';\nimport React from 'react';\nimport List from './List';\nimport Alert from './Alert';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { uuid } from 'uuidv4';\n\nfunction App() {\n\n  const [buttonName, setButtonName] = React.useState('Submit');\n  const [inputGoal, setInputGoal] = React.useState('Enter Goal Here...');\n  const [goalList, setGoalList] = React.useState([]);\n  const [editingElement, setEditingElement] = React.useState({})\n  const [alert, setAlert] = React.useState({\n    msg: '',\n    state: '',\n    show: false\n  });\n\n  const goalChange = (e) => {\n    setInputGoal(e.target.value);\n    console.log(e.target.value);\n  }\n\n  const buttonOnClickHandler = (e) => {\n\n    // check in which state the button was pressed\n    if(buttonName === 'Edit'){\n      // remove the element with the same id from the list\n      const newGoalList = goalList.map((goal) => {\n        if(goal.id === editingElement.id){\n          return { ...goal, name: inputGoal};\n        }\n        return goal;\n      });\n\n      setGoalList(newGoalList);\n      setInputGoal('');\n      setButtonName('Submit');\n      \n    }else{\n      // create a goal with a unique ID\n      const newGoal = {\n        name: inputGoal,\n        id: uuid()\n      }\n\n      // add the new goal to the list of goals\n      setGoalList([...goalList, newGoal]);\n      setInputGoal('');\n    }\n  }\n\n  const editGoal = (id) => {\n    setButtonName('Edit');\n    const goalElement = goalList.filter((goal) => {\n      return goal.id === id;\n    })\n    setInputGoal(goalElement[0].name);\n    setEditingElement(goalElement[0]);\n  }\n\n  const removeGoal = (id) => {\n    const newList = goalList.filter((goal) => {\n      return goal.id !== id;\n    })\n    setGoalList(newList);\n  }\n\n  return (\n    <div className=\"center-div\">\n      <h1 id=\"app-title\">Goal Tracker</h1>\n      <Alert />\n      <div className=\"form-div\">\n        <input id=\"input-box\" type=\"text\" value={inputGoal} onChange={goalChange}/>\n        <button className=\"btn btn-primary\" onClick={buttonOnClickHandler}>{buttonName}</button>\n      </div>\n      <List list={goalList} removeGoal={removeGoal} editGoal={editGoal}/>\n      <div>\n        <button id=\"clear-button\" className=\"btn btn-primary\" onClick={() => setGoalList([])}>Clear All</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\alexs\\Documents\\GitHub\\goal-tracker\\react-goal-tracker\\src\\List.js",[],"C:\\Users\\alexs\\Documents\\GitHub\\goal-tracker\\react-goal-tracker\\src\\Alert.js",[],{"ruleId":"21","severity":1,"message":"22","line":14,"column":10,"nodeType":"23","messageId":"24","endLine":14,"endColumn":15},{"ruleId":"21","severity":1,"message":"25","line":14,"column":17,"nodeType":"23","messageId":"24","endLine":14,"endColumn":25},"no-unused-vars","'alert' is assigned a value but never used.","Identifier","unusedVar","'setAlert' is assigned a value but never used."]